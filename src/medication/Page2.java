/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package medication;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.List;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import static javax.swing.GroupLayout.Alignment.CENTER;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

import net.proteanit.sql.DbUtils;
import org.jdesktop.swingx.decorator.AlignmentHighlighter;
/*import net.proteanit.sql.DbUtils;*/

/**
 *
 * @author Shaurav
 */
public class Page2 extends javax.swing.JFrame {
    DatabaseConnection databaseConnection;

    /**
     * Creates new form Page2
     */
    public Page2() {
        initComponents();
        
        
        
        
        
        //createDBConnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        LoginPanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jPasswordField4 = new javax.swing.JPasswordField();
        jComboBox3 = new javax.swing.JComboBox();
        loginButton = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        Page2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){return false;}
        };
        medicine = new javax.swing.JButton();
        companies = new javax.swing.JButton();
        viewSellRecords = new javax.swing.JButton();
        newSalse = new javax.swing.JButton();
        changePassword = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        searchAllCB = new javax.swing.JComboBox();
        jButton6 = new javax.swing.JButton();
        ChangePassword = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        backFromChangePassword = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPasswordField2 = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPasswordField3 = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        From_Companies_insertCompany = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        newSales = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){return false;}
        };
        jLabel8 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        backFromnewSales = new javax.swing.JButton();
        datePicker = new org.jdesktop.swingx.JXDatePicker();
        jLabel20 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        searchMedCB2 = new javax.swing.JComboBox();
        Delete = new javax.swing.JButton();
        FromMedicine = new javax.swing.JPanel();
        backFromMedicine = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        insertMedicine = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable() {

            public boolean isCellEditable(int row, int column){return false;}

        };
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( SwingConstants.CENTER );
        jTable3.setDefaultRenderer(Boolean.class, centerRenderer)
        ;
        jButton18 = new javax.swing.JButton();
        searchMedCB3 = new javax.swing.JComboBox();
        jLabel35 = new javax.swing.JLabel();
        FromCompamies = new javax.swing.JPanel();
        backFromCompanies = new javax.swing.JButton();
        updateCompany = new javax.swing.JButton();
        insertCompany = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable() {
            public boolean isCellEditable(int row, int column){return false;}
        };
        searchComCombo = new javax.swing.JComboBox();
        From_Med_Update = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        updateMed_updatePrice = new javax.swing.JTextField();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        updateMed_updateQuantity = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        updateMedTable = new javax.swing.JTable() {
            public boolean isCellEditable(int row, int column){return false;}
        };
        backfrom_Med_update = new javax.swing.JButton();
        searchbox = new javax.swing.JComboBox();
        From_Company_Update = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jTextField13 = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable() {
            public boolean isCellEditable(int row, int column){return false;}
        };
        jButton31 = new javax.swing.JButton();
        upadateCompanyCB = new javax.swing.JComboBox();
        jLabel39 = new javax.swing.JLabel();
        From_View_Sales_Record = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable() {
            public boolean isCellEditable(int row, int column){return false;}
        };
        jButton34 = new javax.swing.JButton();
        backFromViewSalesRecocrd = new javax.swing.JButton();
        jXDatePicker2 = new org.jdesktop.swingx.JXDatePicker();
        searchComCB = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        searchMedCB = new javax.swing.JComboBox();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        jXDatePicker3 = new org.jdesktop.swingx.JXDatePicker();
        jButton5 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        From_Med_InsertMed = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        insertName_productName = new javax.swing.JTextField();
        insertMed_productPrice = new javax.swing.JTextField();
        insertMed_productQuantity = new javax.swing.JTextField();
        insertMed_productCategory = new javax.swing.JComboBox();
        bavkFromInsertMed = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        searchComCB3 = new javax.swing.JComboBox();
        uploadData = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        downloadButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        uploadButton = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        AboutPanel = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        backgroundLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PharmacyOnline");
        setMinimumSize(new java.awt.Dimension(1080, 760));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.CardLayout());

        LoginPanel.setBackground(new java.awt.Color(51, 153, 255));
        LoginPanel.setMaximumSize(new java.awt.Dimension(1368, 760));
        LoginPanel.setMinimumSize(new java.awt.Dimension(400, 300));
        LoginPanel.setOpaque(false);
        LoginPanel.setPreferredSize(new java.awt.Dimension(1368, 760));

        jPanel4.setBackground(new java.awt.Color(153, 153, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Login", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(102, 0, 102))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(153, 153, 255));
        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel4.setMaximumSize(new java.awt.Dimension(477, 260));
        jPanel4.setMinimumSize(new java.awt.Dimension(477, 260));
        jPanel4.setOpaque(false);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 204));
        jLabel22.setText("Login as");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Password");

        jPasswordField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField4ActionPerformed(evt);
            }
        });

        jComboBox3.setBackground(new java.awt.Color(153, 153, 255));
        jComboBox3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ADMIN", "EMPLOYEE" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        loginButton.setBackground(new java.awt.Color(51, 102, 255));
        loginButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(109, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(236, 236, 236)
                                .addComponent(jPasswordField4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(209, 209, 209)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(201, 201, 201))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Online Pharmacy Management System , SIU ");

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medication/images.jpg"))); // NOI18N

        javax.swing.GroupLayout LoginPanelLayout = new javax.swing.GroupLayout(LoginPanel);
        LoginPanel.setLayout(LoginPanelLayout);
        LoginPanelLayout.setHorizontalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel24)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 766, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );
        LoginPanelLayout.setVerticalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel24))
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(342, 342, 342))
        );

        jPanel1.add(LoginPanel, "loginCard");

        Page2.setBackground(new java.awt.Color(153, 204, 255));
        Page2.setOpaque(false);
        Page2.setPreferredSize(new java.awt.Dimension(800, 600));

        jButton1.setBackground(new java.awt.Color(102, 102, 255));
        jButton1.setForeground(new java.awt.Color(153, 204, 255));
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 0));
        jLabel1.setText("You are  logged in : ");

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTable1.setName("InfoTable"); // NOI18N
        jTable1.setOpaque(false);
        jTable1.setRowHeight(20);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable1);

        medicine.setBackground(new java.awt.Color(102, 153, 255));
        medicine.setText("Medicine");
        medicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicineActionPerformed(evt);
            }
        });

        companies.setBackground(new java.awt.Color(102, 153, 255));
        companies.setText("Companies");
        companies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                companiesActionPerformed(evt);
            }
        });

        viewSellRecords.setBackground(new java.awt.Color(102, 153, 255));
        viewSellRecords.setText("View Sell Records");
        viewSellRecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewSellRecordsActionPerformed(evt);
            }
        });

        newSalse.setBackground(new java.awt.Color(102, 153, 255));
        newSalse.setText("New Sales");
        newSalse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newSalseActionPerformed(evt);
            }
        });

        changePassword.setBackground(new java.awt.Color(102, 153, 255));
        changePassword.setText("Change Password");
        changePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(102, 153, 255));
        jButton7.setText("Update to Online");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(102, 153, 255));
        jButton8.setText("Log Out");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        searchAllCB.setEditable(true);
        searchAllCB.setToolTipText("search about products , companies , catagories");
        searchAllCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAllCBActionPerformed(evt);
            }
        });
        searchAllCB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchAllCBKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchAllCBKeyReleased(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(102, 153, 255));
        jButton6.setText("About");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Page2Layout = new javax.swing.GroupLayout(Page2);
        Page2.setLayout(Page2Layout);
        Page2Layout.setHorizontalGroup(
            Page2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Page2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(Page2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Page2Layout.createSequentialGroup()
                        .addGroup(Page2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(medicine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(companies, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(viewSellRecords, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newSalse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(changePassword, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(49, 49, 49)
                        .addGroup(Page2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(Page2Layout.createSequentialGroup()
                                .addComponent(searchAllCB, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(jButton1))
                            .addComponent(jScrollPane1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Page2Layout.setVerticalGroup(
            Page2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Page2Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(Page2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(searchAllCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(medicine))
                .addGap(31, 31, 31)
                .addGroup(Page2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(companies))
                .addGap(25, 25, 25)
                .addComponent(viewSellRecords)
                .addGroup(Page2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Page2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(newSalse)
                        .addGap(33, 33, 33)
                        .addComponent(changePassword)
                        .addGap(32, 32, 32)
                        .addComponent(jButton7)
                        .addGap(31, 31, 31)
                        .addComponent(jButton6)
                        .addGap(26, 26, 26)
                        .addComponent(jButton8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Page2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 41, Short.MAX_VALUE))
        );

        jPanel1.add(Page2, "page2Card");

        ChangePassword.setBackground(new java.awt.Color(153, 204, 255));
        ChangePassword.setOpaque(false);
        ChangePassword.setLayout(new java.awt.GridBagLayout());

        jButton9.setBackground(new java.awt.Color(102, 153, 255));
        jButton9.setText("Change Password");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 17;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(69, 319, 358, 0);
        ChangePassword.add(jButton9, gridBagConstraints);

        backFromChangePassword.setBackground(new java.awt.Color(102, 153, 255));
        backFromChangePassword.setText("Back");
        backFromChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFromChangePasswordActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 77;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(69, 428, 358, 0);
        ChangePassword.add(backFromChangePassword, gridBagConstraints);

        jPanel3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("User Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 204));
        jLabel5.setText("Repeat Password");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 204));
        jLabel4.setText("New Password");

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 204));

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 204));
        jLabel38.setText("        Change Password");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(104, 104, 104)
                                .addComponent(jPasswordField3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(104, 104, 104)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPasswordField2, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                                    .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(742, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jPasswordField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 366;
        gridBagConstraints.ipady = 22;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(63, 463, 0, 100);
        ChangePassword.add(jPanel3, gridBagConstraints);

        jPanel1.add(ChangePassword, "changePasswordCard");

        From_Companies_insertCompany.setBackground(new java.awt.Color(153, 204, 255));
        From_Companies_insertCompany.setOpaque(false);
        From_Companies_insertCompany.setLayout(new java.awt.GridBagLayout());

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Company Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(97, 20, 0, 0);
        From_Companies_insertCompany.add(jLabel9, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Email");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 68;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 20, 0, 0);
        From_Companies_insertCompany.add(jLabel11, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Contact no:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        From_Companies_insertCompany.add(jLabel12, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 20, 0, 0);
        From_Companies_insertCompany.add(jLabel13, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 140;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(97, 142, 0, 0);
        From_Companies_insertCompany.add(jTextField6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 140;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 142, 0, 0);
        From_Companies_insertCompany.add(jTextField7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 140;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 142, 0, 0);
        From_Companies_insertCompany.add(jTextField8, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 140;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 142, 0, 0);
        From_Companies_insertCompany.add(jTextField9, gridBagConstraints);

        jButton24.setBackground(new java.awt.Color(102, 153, 255));
        jButton24.setText("Back");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 35;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(46, 58, 477, 0);
        From_Companies_insertCompany.add(jButton24, gridBagConstraints);

        jButton25.setBackground(new java.awt.Color(51, 102, 255));
        jButton25.setText("Insert");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 31;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(46, 258, 477, 552);
        From_Companies_insertCompany.add(jButton25, gridBagConstraints);

        jPanel1.add(From_Companies_insertCompany, "compInsertCompanyCard");

        newSales.setBackground(new java.awt.Color(153, 204, 255));
        newSales.setForeground(new java.awt.Color(255, 255, 255));
        newSales.setOpaque(false);
        newSales.setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Product Name");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Enter Quantity");

        jButton12.setBackground(new java.awt.Color(102, 153, 255));
        jButton12.setText("Add to Cart");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jTable2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product Name", "Date", "Quantity", "Total"
            }
        ));
        jTable2.setRowHeight(20);
        jScrollPane2.setViewportView(jTable2);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Total bill :");

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        backFromnewSales.setBackground(new java.awt.Color(102, 153, 255));
        backFromnewSales.setText("Back");
        backFromnewSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFromnewSalesActionPerformed(evt);
            }
        });

        datePicker.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(51, 102, 255), null, null));
        datePicker.setForeground(new java.awt.Color(0, 0, 255));
        datePicker.setInheritsPopupMenu(true);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Date");

        jButton2.setBackground(new java.awt.Color(51, 102, 255));
        jButton2.setText("Done");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        searchMedCB2.setEditable(true);
        searchMedCB2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        Delete.setBackground(new java.awt.Color(51, 153, 255));
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newSalesLayout = new javax.swing.GroupLayout(newSales);
        newSales.setLayout(newSalesLayout);
        newSalesLayout.setHorizontalGroup(
            newSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newSalesLayout.createSequentialGroup()
                .addGap(238, 238, 238)
                .addGroup(newSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(newSalesLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newSalesLayout.createSequentialGroup()
                        .addGroup(newSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(newSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchMedCB2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(newSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(datePicker, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newSalesLayout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(90, 90, 90))))
                    .addGroup(newSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(backFromnewSales, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(newSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(Delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        newSalesLayout.setVerticalGroup(
            newSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newSalesLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(newSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(newSalesLayout.createSequentialGroup()
                        .addGroup(newSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchMedCB2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newSalesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(newSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74)
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(newSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(newSalesLayout.createSequentialGroup()
                        .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(54, 54, 54)
                .addGroup(newSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backFromnewSales, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(newSales, "newSalesCard");

        FromMedicine.setBackground(new java.awt.Color(153, 204, 255));
        FromMedicine.setOpaque(false);
        FromMedicine.setPreferredSize(new java.awt.Dimension(800, 571));
        FromMedicine.setLayout(new java.awt.GridBagLayout());

        backFromMedicine.setBackground(new java.awt.Color(102, 153, 255));
        backFromMedicine.setText("Back");
        backFromMedicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFromMedicineActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 89;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 21, 0, 0);
        FromMedicine.add(backFromMedicine, gridBagConstraints);

        jButton15.setBackground(new java.awt.Color(102, 153, 255));
        jButton15.setText("Update Medicine");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 31;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(33, 23, 0, 0);
        FromMedicine.add(jButton15, gridBagConstraints);

        insertMedicine.setBackground(new java.awt.Color(102, 153, 255));
        insertMedicine.setText("Insert Medicine");
        insertMedicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertMedicineActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 37;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(52, 23, 0, 0);
        FromMedicine.add(insertMedicine, gridBagConstraints);

        jButton17.setText("Search");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(37, 47, 0, 592);
        FromMedicine.add(jButton17, gridBagConstraints);

        jTable3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Ptoduct Id", "Product Name", "Company Name", "Category", "Quantity", "Price per unit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return Boolean.class;
            }
        });
        jTable3.setOpaque(false);
        jTable3.setRowHeight(20);
        jScrollPane3.setViewportView(jTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 571;
        gridBagConstraints.ipady = 448;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(52, 51, 206, 592);
        FromMedicine.add(jScrollPane3, gridBagConstraints);

        jButton18.setBackground(new java.awt.Color(102, 153, 255));
        jButton18.setText("Delete Medicines");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 29;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 23, 0, 0);
        FromMedicine.add(jButton18, gridBagConstraints);

        searchMedCB3.setEditable(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 321;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 51, 0, 0);
        FromMedicine.add(searchMedCB3, gridBagConstraints);

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Medicine Info");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 47;
        gridBagConstraints.ipady = 24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(39, 226, 0, 0);
        FromMedicine.add(jLabel35, gridBagConstraints);

        jPanel1.add(FromMedicine, "medicineCard");

        FromCompamies.setBackground(new java.awt.Color(153, 204, 255));
        FromCompamies.setOpaque(false);
        FromCompamies.setPreferredSize(new java.awt.Dimension(800, 571));

        backFromCompanies.setBackground(new java.awt.Color(102, 153, 255));
        backFromCompanies.setText("Back");
        backFromCompanies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFromCompaniesActionPerformed(evt);
            }
        });

        updateCompany.setBackground(new java.awt.Color(102, 153, 255));
        updateCompany.setText("Update Company");
        updateCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCompanyActionPerformed(evt);
            }
        });

        insertCompany.setBackground(new java.awt.Color(102, 153, 255));
        insertCompany.setText("Insert Companies");
        insertCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertCompanyActionPerformed(evt);
            }
        });

        jButton22.setText("Search");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setBackground(new java.awt.Color(102, 153, 255));
        jButton23.setText("Delete Companies");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jTable5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(102, 102, 255), null, null));
        jTable5.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "CompanyId", "name", "email", "contactNo", "address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable5.setColumnSelectionAllowed(true);
        jTable5.setDoubleBuffered(true);
        jTable5.setFillsViewportHeight(true);
        jTable5.setOpaque(false);
        jTable5.setRowHeight(25);
        jTable5.setRowMargin(2);
        jTable5.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane8.setViewportView(jTable5);
        jTable5.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable5.getColumnModel().getColumnCount() > 0) {
            jTable5.getColumnModel().getColumn(0).setResizable(false);
            jTable5.getColumnModel().getColumn(1).setResizable(false);
        }

        searchComCombo.setEditable(true);
        searchComCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout FromCompamiesLayout = new javax.swing.GroupLayout(FromCompamies);
        FromCompamies.setLayout(FromCompamiesLayout);
        FromCompamiesLayout.setHorizontalGroup(
            FromCompamiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FromCompamiesLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(FromCompamiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FromCompamiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(backFromCompanies, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(insertCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FromCompamiesLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(updateCompany)))
                .addGap(67, 67, 67)
                .addGroup(FromCompamiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FromCompamiesLayout.createSequentialGroup()
                        .addComponent(searchComCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FromCompamiesLayout.setVerticalGroup(
            FromCompamiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FromCompamiesLayout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addGroup(FromCompamiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton22)
                    .addComponent(searchComCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(FromCompamiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FromCompamiesLayout.createSequentialGroup()
                        .addComponent(updateCompany)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(insertCompany)
                        .addGap(44, 44, 44)
                        .addComponent(jButton23)
                        .addGap(58, 58, 58)
                        .addComponent(backFromCompanies))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(486, Short.MAX_VALUE))
        );

        jPanel1.add(FromCompamies, "companiesCard");

        From_Med_Update.setBackground(new java.awt.Color(153, 204, 255));
        From_Med_Update.setOpaque(false);
        From_Med_Update.setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Product Name");

        jButton26.setBackground(new java.awt.Color(102, 153, 255));
        jButton26.setText("Update Price");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jButton27.setBackground(new java.awt.Color(102, 153, 255));
        jButton27.setText("Update Quantity");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        updateMedTable.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        updateMedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Ptoduct Id", "Product Name", "Company Name", "Category", "Quantity", "Price per unit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        updateMedTable.setRowHeight(20);
        jScrollPane5.setViewportView(updateMedTable);

        backfrom_Med_update.setBackground(new java.awt.Color(102, 153, 255));
        backfrom_Med_update.setText("Back");
        backfrom_Med_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backfrom_Med_updateActionPerformed(evt);
            }
        });

        searchbox.setEditable(true);
        //create the model
        searchbox.setEditable(true);
        searchbox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout From_Med_UpdateLayout = new javax.swing.GroupLayout(From_Med_Update);
        From_Med_Update.setLayout(From_Med_UpdateLayout);
        From_Med_UpdateLayout.setHorizontalGroup(
            From_Med_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(From_Med_UpdateLayout.createSequentialGroup()
                .addGroup(From_Med_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(From_Med_UpdateLayout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(From_Med_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(From_Med_UpdateLayout.createSequentialGroup()
                                .addGroup(From_Med_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(updateMed_updatePrice, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                    .addComponent(updateMed_updateQuantity))
                                .addGap(96, 96, 96)
                                .addGroup(From_Med_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton27)
                                    .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(From_Med_UpdateLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(backfrom_Med_update, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        From_Med_UpdateLayout.setVerticalGroup(
            From_Med_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(From_Med_UpdateLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(From_Med_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backfrom_Med_update, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(From_Med_UpdateLayout.createSequentialGroup()
                        .addGroup(From_Med_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(From_Med_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton26)
                            .addComponent(updateMed_updatePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(From_Med_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton27)
                            .addComponent(updateMed_updateQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(471, 471, 471))
        );

        jPanel1.add(From_Med_Update, "medUpdateCard");

        From_Company_Update.setBackground(new java.awt.Color(153, 204, 255));
        From_Company_Update.setOpaque(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Company Name");

        jButton29.setBackground(new java.awt.Color(102, 153, 255));
        jButton29.setText("Update Contact");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jButton30.setBackground(new java.awt.Color(102, 153, 255));
        jButton30.setText("Update Email");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jTable6.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Ptoduct Id", "Product Name", "Company Name", "Category", "Quantity", "Price per unit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable6.setRowHeight(20);
        jScrollPane6.setViewportView(jTable6);

        jButton31.setBackground(new java.awt.Color(102, 153, 255));
        jButton31.setText("Back");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        upadateCompanyCB.setEditable(true);
        upadateCompanyCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 204));
        jLabel39.setText("Update Company");

        javax.swing.GroupLayout From_Company_UpdateLayout = new javax.swing.GroupLayout(From_Company_Update);
        From_Company_Update.setLayout(From_Company_UpdateLayout);
        From_Company_UpdateLayout.setHorizontalGroup(
            From_Company_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(From_Company_UpdateLayout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(From_Company_UpdateLayout.createSequentialGroup()
                .addGroup(From_Company_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(From_Company_UpdateLayout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addGroup(From_Company_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(From_Company_UpdateLayout.createSequentialGroup()
                                .addGroup(From_Company_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(From_Company_UpdateLayout.createSequentialGroup()
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(73, 73, 73)
                                        .addComponent(upadateCompanyCB, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(105, 105, 105)
                                .addGroup(From_Company_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton30, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton29, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(From_Company_UpdateLayout.createSequentialGroup()
                        .addGap(479, 479, 479)
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(930, Short.MAX_VALUE))
        );
        From_Company_UpdateLayout.setVerticalGroup(
            From_Company_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(From_Company_UpdateLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(From_Company_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(From_Company_UpdateLayout.createSequentialGroup()
                        .addGroup(From_Company_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(upadateCompanyCB, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(From_Company_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton29)
                            .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(From_Company_UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton30)
                            .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)))
                .addGap(293, 293, 293))
        );

        jPanel1.add(From_Company_Update, "compUpdateCompanyCard");

        From_View_Sales_Record.setOpaque(false);

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel2.setOpaque(false);

        jButton32.setBackground(new java.awt.Color(102, 102, 255));
        jButton32.setText("search");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        jButton33.setBackground(new java.awt.Color(51, 102, 255));
        jButton33.setText("search");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        jTable7.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product Name", "Date Of Sale", "Quantity", "Price Per Unit", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable7.setRowHeight(20);
        jScrollPane7.setViewportView(jTable7);

        jButton34.setBackground(new java.awt.Color(51, 102, 255));
        jButton34.setText("Delete");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        backFromViewSalesRecocrd.setBackground(new java.awt.Color(51, 153, 255));
        backFromViewSalesRecocrd.setText("Back");
        backFromViewSalesRecocrd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFromViewSalesRecocrdActionPerformed(evt);
            }
        });

        jXDatePicker2.setToolTipText("Search By Date");

        searchComCB.setEditable(true);
        searchComCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "search by company" }));

        jButton3.setText("search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        searchMedCB.setEditable(true);
        searchMedCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "search by medicine" }));

        jButton5.setText("search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("  -  ");

        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("from");

        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("to");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 204));
        jLabel30.setText("Total sale :");

        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("search by date");

        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("search by medicines");

        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("search by company");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton34, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                    .addComponent(backFromViewSalesRecocrd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(44, 44, 44)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(18, 18, 18)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(searchComCB, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jXDatePicker2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                                .addComponent(searchMedCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jXDatePicker3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(35, 35, 35)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButton32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton33, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(313, 313, 313)
                        .addComponent(jLabel27)
                        .addGap(122, 122, 122)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1131, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton32)
                    .addComponent(searchMedCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton33)
                    .addComponent(jXDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXDatePicker3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5)
                    .addComponent(jLabel26))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(searchComCB, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33))
                .addGap(83, 83, 83)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton34, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backFromViewSalesRecocrd, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(310, Short.MAX_VALUE))
        );

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("View Sells Record");

        javax.swing.GroupLayout From_View_Sales_RecordLayout = new javax.swing.GroupLayout(From_View_Sales_Record);
        From_View_Sales_Record.setLayout(From_View_Sales_RecordLayout);
        From_View_Sales_RecordLayout.setHorizontalGroup(
            From_View_Sales_RecordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, From_View_Sales_RecordLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(From_View_Sales_RecordLayout.createSequentialGroup()
                .addGap(430, 430, 430)
                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        From_View_Sales_RecordLayout.setVerticalGroup(
            From_View_Sales_RecordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(From_View_Sales_RecordLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(From_View_Sales_Record, "viewSalesRecordCard");

        From_Med_InsertMed.setBackground(new java.awt.Color(153, 204, 255));
        From_Med_InsertMed.setOpaque(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(204, 255, 255));
        jLabel15.setText("Product Name");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Company Name");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Product Category");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Product Quantity");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Product Price");

        insertName_productName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertName_productNameActionPerformed(evt);
            }
        });

        insertMed_productCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tablet", "Syrup", "Injection", "Others" }));

        bavkFromInsertMed.setBackground(new java.awt.Color(102, 153, 255));
        bavkFromInsertMed.setText("Back");
        bavkFromInsertMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bavkFromInsertMedActionPerformed(evt);
            }
        });

        jButton36.setBackground(new java.awt.Color(102, 204, 255));
        jButton36.setText("Insert");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 204));
        jLabel21.setText("Insert Medicne");

        searchComCB3.setEditable(true);
        searchComCB3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout From_Med_InsertMedLayout = new javax.swing.GroupLayout(From_Med_InsertMed);
        From_Med_InsertMed.setLayout(From_Med_InsertMedLayout);
        From_Med_InsertMedLayout.setHorizontalGroup(
            From_Med_InsertMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, From_Med_InsertMedLayout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addGroup(From_Med_InsertMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(From_Med_InsertMedLayout.createSequentialGroup()
                        .addGroup(From_Med_InsertMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(bavkFromInsertMed, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(From_Med_InsertMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(insertMed_productQuantity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertMed_productPrice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, From_Med_InsertMedLayout.createSequentialGroup()
                                .addComponent(jButton36, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30))))
                    .addGroup(From_Med_InsertMedLayout.createSequentialGroup()
                        .addGroup(From_Med_InsertMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 768, Short.MAX_VALUE)
                        .addGroup(From_Med_InsertMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(insertMed_productCategory, 0, 165, Short.MAX_VALUE)
                            .addComponent(insertName_productName, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(searchComCB3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(662, 662, 662))
            .addGroup(From_Med_InsertMedLayout.createSequentialGroup()
                .addGap(333, 333, 333)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        From_Med_InsertMedLayout.setVerticalGroup(
            From_Med_InsertMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(From_Med_InsertMedLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(From_Med_InsertMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertName_productName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(From_Med_InsertMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(From_Med_InsertMedLayout.createSequentialGroup()
                        .addComponent(searchComCB3)
                        .addGap(9, 9, 9)))
                .addGroup(From_Med_InsertMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertMed_productCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(From_Med_InsertMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertMed_productQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(From_Med_InsertMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertMed_productPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(From_Med_InsertMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton36, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bavkFromInsertMed, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 534, Short.MAX_VALUE))
        );

        jPanel1.add(From_Med_InsertMed, "medInsertMedCard");

        uploadData.setOpaque(false);

        jPanel5.setOpaque(false);

        downloadButton.setBackground(new java.awt.Color(51, 153, 255));
        downloadButton.setForeground(new java.awt.Color(0, 51, 51));
        downloadButton.setText("Download Data");
        downloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadButtonActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 204));
        jLabel3.setText("Upload to http:// scdnlab.com:2082");

        jButton4.setBackground(new java.awt.Color(51, 153, 255));
        jButton4.setText("back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        uploadButton.setBackground(new java.awt.Color(51, 153, 255));
        uploadButton.setText("Upload Data");
        uploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadButtonActionPerformed(evt);
            }
        });

        jLabel29.setForeground(new java.awt.Color(255, 255, 204));
        jLabel29.setText("Download data to local server");

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 204));
        jLabel37.setText("         Upload / Download Data");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(259, 259, 259)
                .addComponent(downloadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(299, 299, 299)
                .addComponent(jLabel3))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(291, 291, 291)
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(uploadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(downloadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel29)
                .addGap(28, 28, 28)
                .addComponent(uploadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout uploadDataLayout = new javax.swing.GroupLayout(uploadData);
        uploadData.setLayout(uploadDataLayout);
        uploadDataLayout.setHorizontalGroup(
            uploadDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadDataLayout.createSequentialGroup()
                .addGap(380, 380, 380)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(954, Short.MAX_VALUE))
        );
        uploadDataLayout.setVerticalGroup(
            uploadDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(488, Short.MAX_VALUE))
        );

        jPanel1.add(uploadData, "uploadDataCard");

        AboutPanel.setOpaque(false);

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 204));
        jLabel40.setText("About");

        jButton10.setBackground(new java.awt.Color(102, 153, 255));
        jButton10.setText("Back");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setText("This software is developed for maintaining a pharmacy's sellings & buyings");

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setText("Users can keep data &  monitor through online");

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("For any query about this software please send an email to : 'mamun81@gmail.com'");

        javax.swing.GroupLayout AboutPanelLayout = new javax.swing.GroupLayout(AboutPanel);
        AboutPanel.setLayout(AboutPanelLayout);
        AboutPanelLayout.setHorizontalGroup(
            AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AboutPanelLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                .addGap(60, 60, 60)
                .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel42, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel43, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(1083, Short.MAX_VALUE))
        );
        AboutPanelLayout.setVerticalGroup(
            AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AboutPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(532, Short.MAX_VALUE))
        );

        jPanel1.add(AboutPanel, "aboutPanel");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel1, gridBagConstraints);

        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medication/2.jpg"))); // NOI18N
        backgroundLabel.setIconTextGap(0);
        backgroundLabel.setMaximumSize(new java.awt.Dimension(1368, 760));
        backgroundLabel.setMinimumSize(new java.awt.Dimension(1368, 760));
        backgroundLabel.setPreferredSize(new java.awt.Dimension(1368, 760));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(backgroundLabel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newSalseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newSalseActionPerformed
        DefaultTableModel dm = (DefaultTableModel) jTable2.getModel();
        dm.setRowCount(0);
        jTextField3.setText("");

        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "newSalesCard");
    }//GEN-LAST:event_newSalseActionPerformed

    private void changePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "changePasswordCard");
        if (isAdmin){
            jLabel34.setText("ADMIN");
        }
        else{
            jLabel34.setText("EMPLOYEE");
        }
        
    }//GEN-LAST:event_changePasswordActionPerformed

    private void backFromMedicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFromMedicineActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "page2Card");
    }//GEN-LAST:event_backFromMedicineActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
       CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "medUpdateCard");
        searchMedicine();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void insertMedicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertMedicineActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "medInsertMedCard");
    }//GEN-LAST:event_insertMedicineActionPerformed

    private void backFromCompaniesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFromCompaniesActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "page2Card");
    }//GEN-LAST:event_backFromCompaniesActionPerformed

    private void updateCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCompanyActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "compUpdateCompanyCard");
    }//GEN-LAST:event_updateCompanyActionPerformed

    private void insertCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertCompanyActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "compInsertCompanyCard");
    }//GEN-LAST:event_insertCompanyActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        // TODO add your handling code here:
         String query ="UPDATE company SET email="+"'"+jTextField13.getText()+"'"+" WHERE companyName="+"'"+upadateCompanyCB.getSelectedItem().toString()+"'";
        try{
            Statement statement = connection.createStatement();
            statement.executeUpdate(query);
            JOptionPane.showMessageDialog(this,"Email updated successfully");
        }catch(SQLException ex){
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton30ActionPerformed

    private void backFromViewSalesRecocrdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFromViewSalesRecocrdActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "page2Card");
    }//GEN-LAST:event_backFromViewSalesRecocrdActionPerformed

    private void insertName_productNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertName_productNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insertName_productNameActionPerformed

    private void bavkFromInsertMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bavkFromInsertMedActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "medicineCard");
    }//GEN-LAST:event_bavkFromInsertMedActionPerformed

    private void backFromChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFromChangePasswordActionPerformed
       CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "page2Card");
    }//GEN-LAST:event_backFromChangePasswordActionPerformed

    private void backFromnewSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFromnewSalesActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "page2Card");
        
    }//GEN-LAST:event_backFromnewSalesActionPerformed

    private void medicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicineActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "medicineCard");
    }//GEN-LAST:event_medicineActionPerformed

    private void companiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_companiesActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "companiesCard");
    }//GEN-LAST:event_companiesActionPerformed

    private void viewSellRecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewSellRecordsActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "viewSalesRecordCard");
        
    }//GEN-LAST:event_viewSellRecordsActionPerformed

    private void backfrom_Med_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backfrom_Med_updateActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "medicineCard");
    }//GEN-LAST:event_backfrom_Med_updateActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "companiesCard");
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "companiesCard");
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
    
        Statement statement = null;
        
        try {  
             statement = connection.createStatement();
            String query4 = "select * from medicines where productName = '" +insertName_productName.getText()+"'";
            
            resultSet = statement.executeQuery(query4);
            if (resultSet.next()){
                JOptionPane.showMessageDialog(null, "medicine already exist !");
                return;
            }
            String query = "insert into medicines (productName,companyName,category,productQuantity,pricePerUnit) values ("+
                    "'"+insertName_productName.getText()+"'"+","+
                    "'"+searchComCB3.getSelectedItem().toString()+"'"+"," +
                    "'"+insertMed_productCategory.getSelectedItem().toString()+"'"+","+
                    +Integer.parseInt( insertMed_productQuantity.getText())+","+
                    + Integer.parseInt(insertMed_productPrice.getText())+ ")" ;
            String query1 = "select * from company where companyName = " + "'"+searchComCB3.getSelectedItem().toString()+"'";
            statement = connection.createStatement();
            resultSet = statement.executeQuery(query1);
            if (!resultSet.next()){
                
                query1 = "insert into company values (" + "'"+searchComCB3.getSelectedItem().toString()+"'"+",' ',' ',' ' )";
                statement = connection.createStatement();
                statement.executeUpdate(query1);
                JOptionPane.showMessageDialog(null, "new company inserted");
                companyName.add(searchComCB3.getSelectedItem().toString());
                allName.add(searchComCB3.getSelectedItem().toString());
                
            }
            System.out.println(query);
                    //productName.add(insertName_productName.getText());
            
            statement = connection.createStatement();
            statement.executeUpdate(query);
            JOptionPane.showMessageDialog(null, "Medicine inserted successfully");
            //for updating search 
            productName.add(insertName_productName.getText());
            allName.add(insertName_productName.getText());
            searchMedicine();
            searchAll();
            insertName_productName.setText(null);
            searchComCB3.setSelectedItem("");
            insertMed_productQuantity.setText(null);
            insertMed_productPrice.setText(null);
             
            // JAMES BANGLAR RAJPUTRO
            
            
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,ex);
        }

    
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        
        String query ="UPDATE medicines SET pricePerUnit="
                +Integer.parseInt(updateMed_updatePrice.getText())
                +" WHERE productName="
                +"'"+searchbox.getSelectedItem().toString()+"'";
        System.out.println(query);
        
        
           
        try {
            Statement statement = connection.createStatement();
                statement = connection.createStatement();
            statement.executeUpdate(query);
           
             statement = connection.createStatement();
            // showing updated value in table
            String queryTable ="SELECT productId,productName,companyName,category,productQuantity,pricePerUnit FROM medicines "+
                    "WHERE productName = "+"'"+searchbox.getSelectedItem().toString()+"'";
                    
              resultSet=statement.executeQuery(queryTable);  //Allahai jane ki hoibo
                 
             ResultSetMetaData resultSetMetaData = resultSet.getMetaData();
                int numberOfColumns = resultSetMetaData.getColumnCount();             
               updateMedTable.setModel(DbUtils.resultSetToTableModel(resultSet));        
                System.out.println("number of columns "+ numberOfColumns);
                JOptionPane.showMessageDialog(this,"Price is updated succeesfully");
                searchbox.setSelectedItem("");
                updateMed_updatePrice.setText(null);
            
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
        }
        
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        try {
            Statement statement = null;
            statement = connection.createStatement();
            String query ="UPDATE medicines SET productQuantity="
                    +Integer.parseInt(updateMed_updateQuantity.getText())
                    +" WHERE productName="
                    +"'"+searchbox.getSelectedItem().toString()+"'";
            System.out.println(query);
            statement = connection.createStatement();
            statement.executeUpdate(query);
            
             // showing updated value in table
            String queryTable ="SELECT productId,productName,companyName,category,productQuantity,pricePerUnit FROM medicines "+
                    "WHERE productName = "+"'"+searchbox.getSelectedItem().toString()+"'";
                    
              resultSet=statement.executeQuery(queryTable);  //Allahai jane ki hoibo
                 
             ResultSetMetaData resultSetMetaData = resultSet.getMetaData();
                int numberOfColumns = resultSetMetaData.getColumnCount();             
               updateMedTable.setModel(DbUtils.resultSetToTableModel(resultSet));        
                System.out.println("number of columns "+ numberOfColumns);
                JOptionPane.showMessageDialog(this,"Product Quantity is updated successfully");
                searchbox.setSelectedItem("");
                updateMed_updateQuantity.setText(null);
                
            
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,ex);
        }
    }//GEN-LAST:event_jButton27ActionPerformed

    float totalDone =0,total;
    int count=1;
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
         
        try
        {
            
        DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
       String date = format.format(datePicker.getDate());
       //System.out.println(date);
        
        
     total=0;
     // Calculating total price   
         try {
             Statement statement = null;
             statement = connection.createStatement();
           
             String queryMedicine ="SELECT pricePerUnit FROM medicines WHERE productName = "+
                    "'"+searchMedCB2.getSelectedItem().toString()+"'";
              System.out.println("queryMedicine ="+queryMedicine);
             
               resultSet=statement.executeQuery(queryMedicine);
               if (!resultSet.next()){
                   JOptionPane.showMessageDialog(null, "no Data");
                   return;
               }
              resultSet=statement.executeQuery(queryMedicine);
              resultSet.next();
              int price =resultSet.getInt("pricePerUnit");
              System.out.println("price = "+price);
                    
              
              total=price*Integer.parseInt( jTextField2.getText());
              
              System.out.println("Total Price ="+total);
              
         }catch (SQLException ex) {
             
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
         }
         
         
         // Showing selling value in table
           try{ 
               Statement statement = null;
               statement = connection.createStatement();
               String queryFromMedicines ="SELECT productQuantity FROM medicines WHERE productName = "+
                    "'"+searchMedCB2.getSelectedItem().toString()+"'";
              System.out.println("queryFromMedicines ="+queryFromMedicines);
             
               resultSet=statement.executeQuery(queryFromMedicines);
            
             
               resultSet.next();
             int  quantity =resultSet.getInt("productQuantity");
               System.out.println("Quantity = "+quantity);
             int updatedQuantity = quantity -Integer.parseInt( jTextField2.getText());
             System.out.println("updatedVale :"+updatedQuantity);
             
            if( updatedQuantity<0){
                JOptionPane.showMessageDialog(this,"Quantity limit the cross");
            }else{
                //Statement statement = null;
               statement = connection.createStatement();
                String updateQuery="UPDATE medicines SET productQuantity="+updatedQuantity+" WHERE productName = "
                    + "'"+searchMedCB2.getSelectedItem().toString()+"'";
            statement.executeUpdate(updateQuery); 
            String querySale = "insert into salesTable (productName,dateOfSale,Quantity,Total) values ("+
                    "'"+searchMedCB2.getSelectedItem().toString()+"'"+","+
                   "'"+date+"'"+"," +
                    +Integer.parseInt( jTextField2.getText())+","+total+
                    ")" ;
            System.out.println(querySale);
            statement.executeUpdate(querySale);//Quantity updated
           // querySale = "insert into sales (productName,dateOfSale,Quantity,Total) values ("+
              //      "'"+searchMedCB2.getSelectedItem().toString()+"'"+","+
               //    "'"+date+"'"+"," +
                //    +Integer.parseInt( jTextField2.getText())+","+total+
                //    ")" ;
           // statement.executeUpdate(querySale);
            totalDone+=total;
            total=0;
            jTextField3.setText(String.valueOf(totalDone));
            
             //Quantity update in Medicines Table
     
           {
               //Statement statement1 = null
            
              
          String queryTable ="SELECT * FROM salesTable";
          
               System.out.println("queryTable ="+queryTable);
               
               resultSet = statement.executeQuery(queryTable);
               ResultSetMetaData resultSetMetaData =resultSet.getMetaData();
               jTable2.setModel(DbUtils.resultSetToTableModel(resultSet));
               
            
            
        } 
            
            
            }
            
               
               
               
            
           } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, ex);
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
      }
            
           
    }
        catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Invalid Input !! please check carefully");
        }
        
        searchMedCB2.setSelectedItem("");
        jTextField2.setText(null);
           count++;
        
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        Statement statement = null;
        try {
            statement = connection.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
        DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        String date = format.format(jXDatePicker2.getDate());
        System.out.println(date);
        
         String query ="SELECT s.productName,s.dateOfsale,s.Quantity,m.pricePerUnit,s.Total FROM sales AS s,medicines AS m WHERE "
                +"s.dateOfSale ="+"'"+date+"'"+" ORDER BY s.dateOfSale";
         int i=0;
         i++;
        System.out.println("Joy Bangla ="+date+"   "+i);
        System.out.println(query);
        
        try {
            resultSet=statement.executeQuery(query);  //joy Bangla
            ResultSetMetaData resultSetMetaData = resultSet.getMetaData();
                int numberOfColumns = resultSetMetaData.getColumnCount();             
                jTable7.setModel(DbUtils.resultSetToTableModel(resultSet));        
                System.out.println("number of columns "+ numberOfColumns);
                System.out.println("Joy Bangla ="+date);
                //for total
                float total = 0;
                resultSet= statement.executeQuery(query);
                while (resultSet.next()){
                     total += resultSet.getFloat(5);
                     System.out.println(total);
                     
                }
                jTextField1.setText(String.valueOf(total));
        
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
        jXDatePicker2.setDate(null);
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        try{
            Statement statement=null;
            statement=connection.createStatement();
            resultSet=statement.executeQuery("SELECT * FROM salesTable");

            while(resultSet.next()){
                String product=(String) resultSet.getString("productName");
                String date =(String) resultSet.getString("dateOfSale").toString();
                int quantity = (int) resultSet.getInt("Quantity");
                float totalPrice =(float) resultSet.getFloat("Total");
                
                String query="insert into sales (productName,dateOfSale,Quantity,Total) values ("+
                    "'"+product+"'"+","+
                   "'"+date+"'"+"," +
                    +quantity+","+totalPrice+
                    ")" ;
                
                statement=connection.createStatement();
                statement.executeUpdate(query);
                
            }
        }catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        try {
            // TODO add your handling code here:
            Statement statement=null;
            statement=connection.createStatement();
            
            statement.executeUpdate("DELETE FROM salesTable");
           
            
            
            
            String totalBill=Float.toString(totalDone);
            jTextField3.setText(totalBill);
            
           
            totalDone=0;
            count=0;
            
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        // TODO add your handling code here:
            Statement statement = null;
        try {
            statement = connection.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        String query ="SELECT s.productName,s.dateOfsale,s.Quantity,m.pricePerUnit,s.Total FROM sales AS s,medicines AS m WHERE "
                +"s.productName = "+"'"+searchMedCB.getSelectedItem().toString()+"'"+" ORDER BY s.dateOfSale";
        System.out.println("query in View Sell ="+query);
        
        try {
                resultSet=statement.executeQuery(query);  //joy Bangla
                ResultSetMetaData resultSetMetaData = resultSet.getMetaData();
                int numberOfColumns = resultSetMetaData.getColumnCount();             
                jTable7.setModel(DbUtils.resultSetToTableModel(resultSet));        
                System.out.println("number of columns "+ numberOfColumns);
                // String sumquery = "select sum (total) as totalsale from
                float total = 0;
                resultSet= statement.executeQuery(query);
                while (resultSet.next()){
                     total += resultSet.getFloat(5);
                     System.out.println(total);
                     
                }
                jTextField1.setText(String.valueOf(total));
        
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
                 
             searchMedCB.setSelectedItem("");
        
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
        
        String query ="INSERT   INTO company values("+"'"+jTextField6.getText()+"'"+","+"'"+jTextField7.getText()+"'"+
                ","+"'"+jTextField8.getText()+"'"+","+"'"+jTextField9.getText()+"'"+")"; 
        try{
            Statement statement = connection.createStatement();
            statement.executeUpdate(query);
            JOptionPane.showMessageDialog(this,"Inserted successfully");
            //for updating search
            companyName.add(jTextField6.getText());
            allName.add(jTextField6.getText());
            searchCompany();
            searchAll();
        }catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        // TODO add your handling code here:
        
        String query ="UPDATE company SET contactNo="+"'"+jTextField12.getText()+"'"+" WHERE companyName="+"'"+upadateCompanyCB.getSelectedItem().toString()+"'";
        try{
            Statement statement = connection.createStatement();
            statement.executeUpdate(query);
            JOptionPane.showMessageDialog(this,"Contact updated successfully");
            query = "select * from company where companyName = ' " + upadateCompanyCB.getSelectedItem().toString() +"'";
            resultSet = statement.executeQuery(query);
            jTable6.setModel(DbUtils.resultSetToTableModel(resultSet));
        }catch(SQLException ex){
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
                
    }//GEN-LAST:event_jButton29ActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
          
            
            //databaseConnection = new DatabaseConnection("jdbc:mysql://scdnlab.com:3306/scdn_pharmacyManagement");
            databaseConnection = new DatabaseConnection("jdbc:mysql://localhost:3306/mynewdatabase");
        if (jComboBox3.getSelectedIndex() == 0){
                //for online connectin comment out below
                //databaseConnection.setUsername("scdn_saurav");
                  //for offline 
                  databaseConnection.setUsername("root");
                //databaseConnection.setPassword(jPasswordField4.getText());
                System.out.println(""+jPasswordField4.getText());
                isAdmin = true;
                createDBConnection();
                String query = "select password from usertable where username = 'ADMIN'";
                Statement statement = null;
                try {
                    statement = connection.createStatement();
                    resultSet = statement.executeQuery(query);
                    resultSet.next();
                    if (! resultSet.getString("password").equals(jPasswordField4.getText())){
                        JOptionPane.showMessageDialog(null, "password incorret ! try again");
                        return;
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
                
                jLabel1.setText("You are logged in as : ADMIN");
            }
            else {
                //for online connection
                //databaseConnection.setUsername("scdn_sauravEE");
                databaseConnection.setUsername("root");
                isAdmin = false;
                createDBConnection();
                System.out.println(""+jPasswordField4.getText());
                String query = "select password from usertable where username = 'Employee'";
                Statement statement = null;
                
                try {
                    statement = connection.createStatement();
                    resultSet = statement.executeQuery(query);
                    resultSet.next();
                    if (! resultSet.getString("password").equals(jPasswordField4.getText())){
                        JOptionPane.showMessageDialog(null, "password incorret ! try again");
                        return;
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
                }
                //databaseConnection.setPassword(jPasswordField4.getText());
                jLabel1.setText("You are logged in as : EMPLOYEE");
            }
        
        createArrayListDB();
        createArrayListDB2();
        createArrayListDBAll();
        searchMedicine();
        searchCompany();
        searchAll();

        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "page2Card");
    }//GEN-LAST:event_loginButtonActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        if (!jPasswordField2.getText().equals(jPasswordField3.getText())){
            JOptionPane.showMessageDialog(null, "password doesn't match !");
            return;
        }
        try {
            //        try {
//            Statement statement = null;
//            statement = connection.createStatement();
//            //statement = connection.createStatement();
//            statement.executeQuery("SET PASSWORD FOR 'scdn_saurav'@'localhost' = PASSWORD('7872')");
//            System.out.println("password changed");
//        } catch (SQLException ex) {
//            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
//        }
            Statement statement = connection.createStatement();
            String query = "update usertable set password = '"+jPasswordField2.getText()+"'" + " where username =  '"+jLabel34.getText() +"'";
            System.out.println(query);
            statement.executeUpdate(query);
            
            JOptionPane.showMessageDialog(null, "password updated !");
            jPasswordField2.setText("");
            jPasswordField3.setText("");
            
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "uploadDataCard");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void downloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadButtonActionPerformed
        try {
            //Statement statement = connection.createStatement();
            //DatabaseConnection databaseConnection1 = new DatabaseConnection("jdbc:mysql://localhost:3306/mynewdatabase");
            //databaseConnection1.setUsername("root");
            //databaseConnection1.setPassword("");
            
            Connection connection1;
            DatabaseConnection databaseConnection1 = new DatabaseConnection("jdbc:mysql://scdnlab.com:3306/scdn_pharmacyManagement");
            
            databaseConnection1.setUsername("scdn_saurav");
            databaseConnection1.setPassword("evil2014");
            connection1 = databaseConnection1.startConnection();
            Statement statement = connection1.createStatement();
            
            // coping data
            resultSet = statement.executeQuery("select * from medicines");
            PreparedStatement preparedStatement = null;
            Statement statement1 = connection.createStatement();
            statement1.executeUpdate("truncate medicines");
            while (resultSet.next()){
                
                //preparedStatement = connection1.prepareStatement("insert into medicines values (?,?,?,?,?,?)");
                preparedStatement = connection.prepareStatement("insert into medicines values (?,?,?,?,?,?)");
                preparedStatement.setInt(1,resultSet.getInt(1));
                preparedStatement.setString(2, resultSet.getString(2));
                preparedStatement.setString(3, resultSet.getString(3));
                preparedStatement.setString(4, resultSet.getString(4));
                preparedStatement.setInt(5, resultSet.getInt(5));
                preparedStatement.setInt(6, resultSet.getInt(6));
                preparedStatement.executeUpdate();
                
                
            }
            
            
            resultSet = statement.executeQuery("select * from company");
            PreparedStatement preparedStatement1 = null;
            statement1 = connection.createStatement();
            statement1.executeUpdate("truncate company");
            while (resultSet.next()){
                
                
                //preparedStatement = connection1.prepareStatement("insert into company values (?,?,?,?)");
                preparedStatement = connection.prepareStatement("insert into company values (?,?,?,?)");
                preparedStatement.setString(1, resultSet.getString(1));
                preparedStatement.setString(2, resultSet.getString(2));
                preparedStatement.setString(3, resultSet.getString(3));
                preparedStatement.setString(4, resultSet.getString(4));
                preparedStatement.executeUpdate();
            }
            
            resultSet = statement.executeQuery("select * from sales");
            PreparedStatement preparedStatement2 = null;
            statement1 = connection.createStatement();
            statement1.executeUpdate("truncate sales");
            while (resultSet.next()){
                
                
                preparedStatement = connection.prepareStatement("insert into sales values (?,?,?,?,?)");
                preparedStatement.setInt(1, resultSet.getInt(1));
                preparedStatement.setString(2, resultSet.getString(2));
                preparedStatement.setDate(3, resultSet.getDate(3));
                preparedStatement.setInt(4, resultSet.getInt(4));
                preparedStatement.setFloat(5, resultSet.getFloat(5));
                preparedStatement.executeUpdate();
            }
            
            
            resultSet = statement.executeQuery("select * from salesTable");
            PreparedStatement preparedStatement3 = null;
            statement1 = connection.createStatement();
            statement1.executeUpdate("truncate salesTable");
            while (resultSet.next()){
                
                
                preparedStatement = connection.prepareStatement("insert into salestable values (?,?,?,?)");
                preparedStatement.setString(1, resultSet.getString(1));              
                preparedStatement.setDate(2, resultSet.getDate(2));
                preparedStatement.setInt(3, resultSet.getInt(3));
                preparedStatement.setFloat(4, resultSet.getFloat(4));
                preparedStatement.executeUpdate();
            }
            
            
            //clearing data from arrayList
            allName.clear();
            productName.clear();
            companyName.clear();
            //inserting data to arraylist
            createArrayListDB();
            createArrayListDB2();
            createArrayListDBAll();
            
            //updating comboBox
            
            searchMedicine();
            searchMedicine();
            searchAll();
            
            
            
            JOptionPane.showMessageDialog(null, "Data Downloaded");
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_downloadButtonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "page2Card");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        try {
            Statement statement = connection.createStatement();
            String query = "select * from medicines where productName = "+ "'" +searchMedCB3.getSelectedItem().toString()+"'";
            resultSet = statement.executeQuery(query);
            System.out.println(query);
            jTable3.setModel(DbUtils.resultSetToTableModel(resultSet));
            //for cenetring
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment( SwingConstants.CENTER );
                jTable3.setDefaultRenderer(Boolean.class, centerRenderer);
                
            
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        try {
            Statement statement = connection.createStatement();
            String query = "select * from company where companyname = "+ "'" +searchComCombo.getSelectedItem().toString()+"'";
            resultSet = statement.executeQuery(query);
            System.out.println(query);
            jTable5.setModel(DbUtils.resultSetToTableModel(resultSet));
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
         String query ="SELECT s.productName,s.dateOfsale,s.Quantity,m.pricePerUnit,s.Total FROM sales AS s,medicines AS m WHERE "
                +"m.companyName = "+"'"+searchComCB.getSelectedItem().toString()+"'"+" ORDER BY s.dateOfSale";
         
        try{
            Statement statement = connection.createStatement();
             resultSet = statement.executeQuery(query);
             jTable7.setModel(DbUtils.resultSetToTableModel(resultSet));
             //for total
                float total = 0;
                resultSet= statement.executeQuery(query);
                while (resultSet.next()){
                     total += resultSet.getFloat(5);
                     System.out.println(total);
                     
                }
                jTextField1.setText(String.valueOf(total));
        }catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
      
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
             int row = jTable3.getSelectedRow();
             int column = jTable3.getColumnCount();
             int id=(int) jTable3.getValueAt(row, 0);
                        System.out.println("id="+id);
 
             for(int i = 0; i < column; i++) {
    
    System.out.println(jTable3.getValueAt(row, i));
}
    String deleteString= "DELETE FROM medicines WHERE productId="+id;
        System.out.println("deleteString ="+deleteString);
        
    String name = "select productName FROM medicines WHERE productId="+id;
    
    
     try{
         Statement statement = connection.createStatement();
         resultSet = statement.executeQuery(name);
         if (resultSet.next())
         {
             productName.remove(resultSet.getString("productName"));
             allName.remove(resultSet.getString("productName"));
             System.out.println("done");
         }
            statement.executeUpdate(deleteString);
           JOptionPane.showMessageDialog(this," DELETED Successfully");
           
           resultSet = statement.executeQuery("select * from medicines");
                jTable3.setModel(DbUtils.resultSetToTableModel(resultSet));
                
                //for centering value
                
        }catch(SQLException ex){
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        // TODO add your handling code here:
        
                   int row = jTable7.getSelectedRow();
                    int column = jTable7.getColumnCount();
                    String  product=(String) jTable7.getValueAt(row, 0);
                    String date=(String) jTable7.getValueAt(row, 1).toString();
                    int quantity=(int) jTable7.getValueAt(row, 2);
            System.out.println("product="+product);
 
            for(int i = 0; i < column; i++) {
    
         System.out.println(jTable7.getValueAt(row, i));
}
             String deleteString= "DELETE FROM sales WHERE productName="+"'"+product+"'"+
                     " AND dateOfSale="+"'"+date+"'"+" AND Quantity="+
                     quantity;
             System.out.println("deleteString from sales="+deleteString);
             
             try{
                 Statement statement = connection.createStatement();
                 statement.executeUpdate(deleteString);
           JOptionPane.showMessageDialog(this," DELETED Successfully");
           resultSet = statement.executeQuery("SELECT s.productName,s.dateOfsale,s.Quantity,m.pricePerUnit,s.Total FROM sales AS s,medicines AS m");
                jTable7.setModel(DbUtils.resultSetToTableModel(resultSet));
        }catch(SQLException ex){
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
       }
        
        
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
          int row = jTable5.getSelectedRow();
          int column = jTable5.getColumnCount();
          String company =(String) jTable5.getValueAt(row,0);
          System.out.println("Company="+company);
          
           String deleteString= "DELETE FROM company WHERE companyname="+"'"+company+"'";
             
             System.out.println("deleteString from sales="+deleteString);
             
             try{
                 Statement statement = connection.createStatement();
            statement.executeUpdate(deleteString);
           JOptionPane.showMessageDialog(this," DELETED Successfully");
           resultSet = statement.executeQuery("select * from company");
                jTable5.setModel(DbUtils.resultSetToTableModel(resultSet));
           companyName.remove(company);
           allName.remove(company);
           searchCompany();
           searchAll();
        }catch(SQLException ex){
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
       }
          
        
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Statement statement = null;
            statement = connection.createStatement();
            String query = "select * from medicines where productName = "+"'"+searchAllCB.getSelectedItem().toString()+"'"
                    +" OR companyName="+"'"+searchAllCB.getSelectedItem().toString()+"'"
                    +" OR category ="+"'"+searchAllCB.getSelectedItem().toString()+"'";
            resultSet = statement.executeQuery(query);
            jTable1.setModel(DbUtils.resultSetToTableModel(resultSet));
                    
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPasswordField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField4ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
            int row = jTable2.getSelectedRow();
                    int column = jTable2.getColumnCount();
                    String  product=(String) jTable2.getValueAt(row, 0);
                    String date=(String) jTable2.getValueAt(row, 1).toString();
                    int quantity=(int) jTable2.getValueAt(row, 2);
                    float totalPrice=(float) jTable2.getValueAt(row, 3);
                    totalDone-=totalPrice;
                    jTextField3.setText(String.valueOf(totalDone));
            System.out.println("product="+product);
            
 
            for(int i = 0; i < column; i++) {
    
         System.out.println(jTable2.getValueAt(row, i));
          }
           
            
             String deleteString= "DELETE FROM salesTable WHERE productName="+"'"+product+"'"+
                     " AND dateOfSale="+"'"+date+"'"+" AND Quantity="+
                     quantity;
             System.out.println("deleteString from sales="+deleteString);
             
             try{
                 Statement statement = connection.createStatement();
                 statement.executeUpdate(deleteString);
           JOptionPane.showMessageDialog(this," DELETED Successfully");
           resultSet = statement.executeQuery("SELECT * FROM salesTable");
                jTable2.setModel(DbUtils.resultSetToTableModel(resultSet));
        }catch(SQLException ex){
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
       }
    }//GEN-LAST:event_DeleteActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        String date1 = format.format(jXDatePicker3.getDate());
        String date2 = format.format(jXDatePicker1.getDate());
        
        String query="SELECT s.productName,s.dateOfsale,s.Quantity,m.pricePerUnit,s.Total FROM sales AS s,medicines AS m WHERE "
               +"(" +"s.dateOfSale BETWEEN"+"'"+date1+"'"+
                " AND "+"'"+date2+"'"+")"+" OR s.dateOfSale BETWEEN "+"'"+date2+"'"+
                " AND "+"'"+date1+"'"
                +" ORDER BY s.dateOfSale";
            
         try {
             Statement statement =connection.createStatement();
            resultSet=statement.executeQuery(query);  //joy Bangla
           
            ResultSetMetaData resultSetMetaData = resultSet.getMetaData();
                
           
                jTable7.setModel(DbUtils.resultSetToTableModel(resultSet));        
             //   System.out.println("number of columns "+ numberOfColumns);
             //   System.out.println("Joy Bangla ="+date);
                
               statement =connection.createStatement();
            resultSet=statement.executeQuery(query);
                   float totalPrice=0;
            while(resultSet.next()){
                float price = resultSet.getFloat("Total");
               // System.out.println("Price="+price);
                totalPrice+=price;
            }
             jTextField1.setText(String.valueOf(totalPrice));
               
        
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        databaseConnection.closeConnection();
        jPasswordField4.setText("");
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "loginCard");
    }//GEN-LAST:event_jButton8ActionPerformed

    private void searchAllCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAllCBActionPerformed
        //jButton1ActionPerformed(evt);
        
    }//GEN-LAST:event_searchAllCBActionPerformed

    private void searchAllCBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchAllCBKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchAllCBKeyPressed

    private void searchAllCBKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchAllCBKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_searchAllCBKeyReleased

    private void uploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadButtonActionPerformed

        try {
            Connection connection1;
            DatabaseConnection databaseConnection1 = new DatabaseConnection("jdbc:mysql://scdnlab.com:3306/scdn_pharmacyManagement");
            
            databaseConnection1.setUsername("scdn_saurav");
            databaseConnection1.setPassword("evil2014");
            connection1 = databaseConnection1.startConnection();
            Statement statement = connection.createStatement();
            
            // coping data
            resultSet = statement.executeQuery("select * from medicines");
            PreparedStatement preparedStatement = null;
            Statement statement1 = connection1.createStatement();
            statement1.executeUpdate("truncate medicines");
            while (resultSet.next()){
                
                //preparedStatement = connection1.prepareStatement("insert into medicines values (?,?,?,?,?,?)");
                preparedStatement = connection1.prepareStatement("insert into medicines values (?,?,?,?,?,?)");
                preparedStatement.setInt(1,resultSet.getInt(1));
                preparedStatement.setString(2, resultSet.getString(2));
                preparedStatement.setString(3, resultSet.getString(3));
                preparedStatement.setString(4, resultSet.getString(4));
                preparedStatement.setInt(5, resultSet.getInt(5));
                preparedStatement.setInt(6, resultSet.getInt(6));
                preparedStatement.executeUpdate();
                
                
            }
            
            statement = connection.createStatement();
            resultSet = statement.executeQuery("select * from company");
            PreparedStatement preparedStatement1 = null;
            statement1 = connection1.createStatement();
            statement1.executeUpdate("truncate company");
            while (resultSet.next()){
                
                
                //preparedStatement = connection1.prepareStatement("insert into company values (?,?,?,?)");
                preparedStatement = connection1.prepareStatement("insert into company values (?,?,?,?)");
                preparedStatement.setString(1, resultSet.getString(1));
                preparedStatement.setString(2, resultSet.getString(2));
                preparedStatement.setString(3, resultSet.getString(3));
                preparedStatement.setString(4, resultSet.getString(4));
                preparedStatement.executeUpdate();
            }
            statement  =connection.createStatement();
            resultSet = statement.executeQuery("select * from sales");
            PreparedStatement preparedStatement2 = null;
            statement1 = connection1.createStatement();
            statement1.executeUpdate("truncate sales");
            while (resultSet.next()){
                
                
                preparedStatement = connection1.prepareStatement("insert into sales values (?,?,?,?,?)");
                preparedStatement.setInt(1, resultSet.getInt(1));
                preparedStatement.setString(2, resultSet.getString(2));
                preparedStatement.setDate(3, resultSet.getDate(3));
                preparedStatement.setInt(4, resultSet.getInt(4));
                preparedStatement.setFloat(5, resultSet.getFloat(5));
                preparedStatement.executeUpdate();
            }
            
            statement = connection.createStatement();
            resultSet = statement.executeQuery("select * from salesTable");
            PreparedStatement preparedStatement3 = null;
            statement1 = connection1.createStatement();
            statement1.executeUpdate("truncate salesTable");
            while (resultSet.next()){
                
                
                preparedStatement = connection1.prepareStatement("insert into salestable values (?,?,?,?)");
                preparedStatement.setString(1, resultSet.getString(1));              
                preparedStatement.setDate(2, resultSet.getDate(2));
                preparedStatement.setInt(3, resultSet.getInt(3));
                preparedStatement.setFloat(4, resultSet.getFloat(4));
                preparedStatement.executeUpdate();
            }
            
            JOptionPane.showMessageDialog(this, "uploading done");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
    }//GEN-LAST:event_uploadButtonActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "aboutPanel");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        CardLayout card = (CardLayout) jPanel1.getLayout();
        card.show(jPanel1, "page2Card");
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Page2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Page2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Page2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Page2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Page2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AboutPanel;
    private javax.swing.JPanel ChangePassword;
    private javax.swing.JButton Delete;
    private javax.swing.JPanel FromCompamies;
    private javax.swing.JPanel FromMedicine;
    private javax.swing.JPanel From_Companies_insertCompany;
    private javax.swing.JPanel From_Company_Update;
    private javax.swing.JPanel From_Med_InsertMed;
    private javax.swing.JPanel From_Med_Update;
    private javax.swing.JPanel From_View_Sales_Record;
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JPanel Page2;
    private javax.swing.JButton backFromChangePassword;
    private javax.swing.JButton backFromCompanies;
    private javax.swing.JButton backFromMedicine;
    private javax.swing.JButton backFromViewSalesRecocrd;
    private javax.swing.JButton backFromnewSales;
    private javax.swing.JButton backfrom_Med_update;
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JButton bavkFromInsertMed;
    private javax.swing.JButton changePassword;
    private javax.swing.JButton companies;
    private org.jdesktop.swingx.JXDatePicker datePicker;
    private javax.swing.JButton downloadButton;
    private javax.swing.JButton insertCompany;
    private javax.swing.JComboBox insertMed_productCategory;
    private javax.swing.JTextField insertMed_productPrice;
    private javax.swing.JTextField insertMed_productQuantity;
    private javax.swing.JButton insertMedicine;
    private javax.swing.JTextField insertName_productName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JPasswordField jPasswordField3;
    private javax.swing.JPasswordField jPasswordField4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker2;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker3;
    private javax.swing.JButton loginButton;
    private javax.swing.JButton medicine;
    private javax.swing.JPanel newSales;
    private javax.swing.JButton newSalse;
    private javax.swing.JComboBox searchAllCB;
    private javax.swing.JComboBox searchComCB;
    private javax.swing.JComboBox searchComCB3;
    private javax.swing.JComboBox searchComCombo;
    private javax.swing.JComboBox searchMedCB;
    private javax.swing.JComboBox searchMedCB2;
    private javax.swing.JComboBox searchMedCB3;
    private javax.swing.JComboBox searchbox;
    private javax.swing.JComboBox upadateCompanyCB;
    private javax.swing.JButton updateCompany;
    private javax.swing.JTable updateMedTable;
    private javax.swing.JTextField updateMed_updatePrice;
    private javax.swing.JTextField updateMed_updateQuantity;
    private javax.swing.JButton uploadButton;
    private javax.swing.JPanel uploadData;
    private javax.swing.JButton viewSellRecords;
    // End of variables declaration//GEN-END:variables

    //--making arrayList for search suggestion
    ArrayList<String>productName = new ArrayList<String>();
    ArrayList<String>companyName = new ArrayList<String>();
    ArrayList<String>allName = new ArrayList<String>();
    Boolean isAdmin ;
    
    
    Connection connection = null;
    //Statement statement = null;
    ResultSet resultSet = null;
    
    private void db_update() {
               
        {
            
                
            try {
                Statement statement = connection.createStatement();
                //resultSet = statement.executeQuery("");
                resultSet = statement.executeQuery("select * from medicines");
                //statement.executeQuery("insert ino products values (10,'napa','beximco','tablet',100,10)");
                ResultSetMetaData resultSetMetaData = resultSet.getMetaData();
                int numberOfColumns = resultSetMetaData.getColumnCount();             
                jTable1.setModel(DbUtils.resultSetToTableModel(resultSet));   
                
                //companyInfo
                resultSet = statement.executeQuery("select * from company");
                jTable5.setModel(DbUtils.resultSetToTableModel(resultSet));
                System.out.println("number of columns "+ numberOfColumns);
                
            } catch (SQLException ex) {
                Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
            }
             
            
        }
        
        
    }

    private void dbConnect() throws SQLException {
        
        String DATABASE_URL = "jdbc:mysql://scdnlab.com:3306/scdn_pharmacyManagement";
                
        try {
            //        String DATABASE_URL = "jdbc:mysql://localhost:3306/mynewdatabase";
            Class.forName("com.mysql.jdbc.Driver").newInstance();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
        connection = DriverManager.getConnection(DATABASE_URL,"scdn_saurav","evil2014");
        System.out.println("gg");
        Statement statement = connection.createStatement();
        statement = connection.createStatement();
        
    }

    private void createDBConnection() {
        try {
            
            connection =databaseConnection.startConnection();
            Statement statement = connection.createStatement();
            System.out.println("connected");
            statement = connection.createStatement();
            db_update();
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void autoComplete(){
        final JTextField textfield = (JTextField)     searchbox.getEditor().getEditorComponent();
                    textfield.addKeyListener(new KeyAdapter() {
                       public void keyReleased(KeyEvent ke) {
                         SwingUtilities.invokeLater(new Runnable() {
                       public void run() {
                             comboFilter(textfield.getText());
                }
            });
        }
    });
    }
    
    
public void comboFilter(String enteredText) {
      ArrayList<String> filterArray= new ArrayList<String>();

            String str1="";

     try
    {


    String str="SELECT productName FROM medicines WHERE productName  LIKE '"+enteredText+"%'";

     //Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
     //Connection con=DriverManager.getConnection("jdbc:odbc:ds1", "sa" , "creative");
     Statement stmt=connection.createStatement();
     ResultSet rs=stmt.executeQuery(str);
     while(rs.next())
     {

      str1=rs.getString("productName");
      filterArray.add(str1);


     }

    }
    catch(Exception ex)
    {
     System.out.println("error"+ex);   
    }



}
    private void searchAll(){
        SearchBoxModel sbm5 = new SearchBoxModel(searchAllCB, allName);
        searchAllCB.setModel(sbm5);
        searchAllCB.addItemListener(sbm5);
        
    }

    private void searchMedicine() {
       
        //starting--
            SearchBoxModel sbm = new SearchBoxModel(searchbox,productName);
            //set the model on the combobox
            searchbox.setModel(sbm);
            //set the model as the item listener also
            searchbox.addItemListener(sbm);
            
            SearchBoxModel sbm1 = new SearchBoxModel(searchMedCB, productName);
            searchMedCB.setModel(sbm1);
            searchMedCB.addItemListener(sbm1);
            
            SearchBoxModel sbm2 = new SearchBoxModel(searchMedCB2, productName);
            searchMedCB2.setModel(sbm2);
            searchMedCB2.addItemListener(sbm2);
            
            SearchBoxModel sbm3 = new SearchBoxModel(searchMedCB3, productName);
            searchMedCB3.setModel(sbm3);
            searchMedCB3.addItemListener(sbm3);
            
        
    }
    
    public void searchCompany(){
        SearchBoxModel sbmc = new SearchBoxModel(searchComCombo, companyName);
        searchComCombo.setModel(sbmc);
        searchComCombo.addItemListener(sbmc);
        
        SearchBoxModel sbmc1 = new SearchBoxModel(upadateCompanyCB, companyName);
        upadateCompanyCB.setModel(sbmc1);
        upadateCompanyCB.addItemListener(sbmc1);
        
        SearchBoxModel sbmc2 = new SearchBoxModel(searchComCB, companyName);
        searchComCB.setModel(sbmc2);
        searchComCB.addItemListener(sbmc2);
        
        SearchBoxModel sbmc3 = new SearchBoxModel(searchComCB3, companyName);
        searchComCB3.setModel(sbmc3);
        searchComCB3.addItemListener(sbmc3);
        
        
        
    }
    
    private void createArrayListDB(){
        try {
            String sql = "select productName from medicines";
            Statement stmt=connection.createStatement();
            ResultSet rs=stmt.executeQuery(sql);
            while(rs.next())
            {
                
                productName.add(rs.getString("productName"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    public void createArrayListDB2(){
        try {
            String sql = "select companyname from company";
            Statement stmt=connection.createStatement();
            ResultSet rs=stmt.executeQuery(sql);
            while(rs.next())
            {
                
                companyName.add(rs.getString("companyName"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Page2.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    public void createArrayListDBAll(){
          allName.addAll(productName);
          allName.addAll(companyName);
          allName.add("Tablet");
          allName.add("Syrup");
          allName.add("Injection");
          allName.add("Others");
        
    }

    
}
//To change body of generated methods, choose Tools | Templates.
    


